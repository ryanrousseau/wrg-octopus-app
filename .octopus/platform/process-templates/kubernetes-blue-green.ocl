name = "Kubernetes - Blue-Green"
description = ""

icon {
    color = "#0D80D8"
    id = "crow"
}

parameter "Template.Cluster.Namespace" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The namespace to deploy the application into"
    label = "Cluster namespace"

    value "" {}
}

parameter "Template.Deployment.Name" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The name of the deployment to create/update"
    label = "Deployment name"

    value "" {}
}

parameter "Template.Deployment.PreviewReplicas" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = ""
    label = "PreviewReplicas"

    value "1" {}
}

parameter "Template.Deployment.Replicas" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = ""
    label = "Replicas"

    value "3" {}
}

parameter "Template.Environment.Production" {
    display_settings = {
        Octopus.ControlType = "Environments"
    }
    help_text = ""
    label = "Production environment"
}

parameter "Template.Labels.Component" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The component label to add to the deployment and service definitions."
    label = "Component label"

    value "app" {}
}

parameter "Template.Service.Name" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The name of the service to create/update."
    label = "Service name"

    value "" {}
}

parameter "Template.Service.PreviewPort" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The port of the service to create/update."
    label = "Preview service port"

    value "8090" {}
}

parameter "Template.Service.Port" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The port of the service to create/update."
    label = "Service port"

    value "8080" {}
}

parameter "Template.Container.PortName" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The name of port to create/update."
    label = "Service port name"

    value "http-port" {}
}

parameter "Template.Container.TargetPort" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The target port of the service to create/update."
    label = "Service target port"

    value "8080" {}
}

parameter "Template.Tag" {
    display_settings = {
        Octopus.ControlType = "TargetTags"
    }
    help_text = ""
    label = "Cluster tag"
}

parameter "Template.Container" {
    display_settings = {
        Octopus.ControlType = "Package"
    }
    help_text = "The container to deploy"
    label = "App Container"
}

parameter "Template.Wait.Seconds" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The amount of time to wait after a canary phase."
    label = "Waiting period (seconds)"

    value "60" {}
}

step "create-namespace-if-it-does-not-exist" {
    name = "Create namespace if it does not exist"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action {
        action_type = "Octopus.KubernetesRunScript"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "template-scripts/shared/create-namespace.ps1"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "get-active-deployment" {
    name = "Get active deployment"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action {
        action_type = "Octopus.KubernetesRunScript"
        properties = {
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "template-scripts/kubernetes-blue-green/get-active-deployment.ps1"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "create-deployment" {
    name = "Create deployment"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action "create-deployment" {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.Kubernetes.ServerSideApply.Enabled = "True"
            Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "True"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "template-scripts/kubernetes-blue-green/deployment.yml"
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            file_path_filters = ["template-scripts/kubernetes-blue-green/deployment.yml"]
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }

        packages "app-container" {
            acquisition_location = "NotAcquired"
            feed = "docker-hub"
            package_id = ""
            properties = {
                Extract = "False"
                PackageParameterName = "Template.Container"
                Purpose = ""
                SelectionMode = "deferred"
            }
        }
    }
}

step "create-preview-service" {
    name = "Create preview service"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action "create-preview-service" {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.Kubernetes.ServerSideApply.Enabled = "True"
            Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "True"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "template-scripts/kubernetes-blue-green/preview-service.yml"
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            file_path_filters = ["template-scripts/kubernetes-blue-green/preview-service.yml"]
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "waiting-period" {
    name = "Waiting period"
    properties = {
        Octopus.Action.TargetRoles = "#{Template.Tag}"
    }

    action {
        action_type = "Octopus.Script"
        excluded_environments_variable = "#{Template.Environment.Production}"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "template-scripts/shared/wait.ps1"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "approval-swap" {
    name = "Approve swap"

    action {
        action_type = "Octopus.Manual"
        environments_variable = "#{Template.Environment.Production}"
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "True"
            Octopus.Action.Manual.Instructions = "Approve canary phase 2"
            Octopus.Action.RunOnServer = "false"
        }
    }
}

step "create-service" {
    name = "Create service"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action "create-service" {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.Kubernetes.ServerSideApply.Enabled = "True"
            Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "True"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "template-scripts/kubernetes-blue-green/service.yml"
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            file_path_filters = ["template-scripts/kubernetes-blue-green/service.yml"]
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "scale-down-previous-deployment" {
    name = "Scale down previous deployment"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action {
        action_type = "Octopus.KubernetesRunScript"
        properties = {
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "template-scripts/kubernetes-blue-green/scale-down-previous-deployment.ps1"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}
