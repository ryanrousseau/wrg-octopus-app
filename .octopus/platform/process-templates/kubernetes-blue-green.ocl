name = "Kubernetes - Blue-Green"
description = ""

icon {
    color = "#0D80D8"
    id = "crow"
}

parameter "Template.Cluster.Namespace" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The namespace to deploy the application into"
    label = "Cluster namespace"

    value "" {}
}

parameter "Template.Deployment.Name" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The name of the deployment to create/update"
    label = "Deployment name"

    value "" {}
}

parameter "Template.Deployment.PreviewReplicas" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = ""
    label = "PreviewReplicas"

    value "1" {}
}

parameter "Template.Deployment.Replicas" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = ""
    label = "Replicas"

    value "3" {}
}

parameter "Template.Environment.Production" {
    display_settings = {
        Octopus.ControlType = "Environments"
    }
    help_text = ""
    label = "Production environment"
}

parameter "Template.Labels.Component" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The component label to add to the deployment and service definitions."
    label = "Component label"

    value "app" {}
}

parameter "Template.Service.Name" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The name of the service to create/update."
    label = "Service name"

    value "" {}
}

parameter "Template.Service.PreviewPort" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The port of the service to create/update."
    label = "Preview service port"

    value "8090" {}
}

parameter "Template.Service.Port" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The port of the service to create/update."
    label = "Service port"

    value "8080" {}
}

parameter "Template.Container.PortName" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The name of port to create/update."
    label = "Service port name"

    value "http-port" {}
}

parameter "Template.Container.TargetPort" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "The target port of the service to create/update."
    label = "Service target port"

    value "8080" {}
}

parameter "Template.Tag" {
    display_settings = {
        Octopus.ControlType = "TargetTags"
    }
    help_text = ""
    label = "Cluster tag"
}

parameter "Template.Container" {
    display_settings = {
        Octopus.ControlType = "Package"
    }
    help_text = "The container to deploy"
    label = "App Container"
}

step "create-namespace-if-it-does-not-exist" {
    name = "Create namespace if it does not exist"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action {
        action_type = "Octopus.KubernetesRunScript"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "template-scripts/shared/create-namespace.ps1"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "get-active-deployment" {
    name = "Get active deployment"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action {
        action_type = "Octopus.KubernetesRunScript"
        properties = {
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "template-scripts/kubernetes-blue-green/get-active-deployment.ps1"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "create-service" {
    name = "Create service"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action "create-service" {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.Kubernetes.ServerSideApply.Enabled = "True"
            Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "True"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "template-scripts/kubernetes-canary/deploy-service.yml"
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            file_path_filters = ["template-scripts/kubernetes-canary/deploy-service.yml"]
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "scale-up-existing-deployment" {
    name = "Scale up existing deployment"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action {
        action_type = "Octopus.KubernetesRunScript"
        properties = {
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "template-scripts/kubernetes-canary/scale-existing-deployment.ps1"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "deploy-canary-phase-1" {
    name = "Deploy canary phase 1"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action "deploy-canary-phase-1" {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.Kubernetes.ServerSideApply.Enabled = "True"
            Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "True"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "template-scripts/kubernetes-canary/canary-phase-1.yml"
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            file_path_filters = ["template-scripts/kubernetes-canary/canary-phase-1.yml"]
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }

        packages "app-container" {
            acquisition_location = "NotAcquired"
            feed = "docker-hub"
            package_id = ""
            properties = {
                Extract = "False"
                PackageParameterName = "Template.Container"
                Purpose = ""
                SelectionMode = "deferred"
            }
        }
    }
}

step "add-canary-pods-to-service" {
    name = "Add canary pods to service"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.Kubernetes.ServerSideApply.Enabled = "True"
            Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "True"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "template-scripts/kubernetes-canary/add-canary-pods-to-service.yml"
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            file_path_filters = ["template-scripts/kubernetes-canary/add-canary-pods-to-service.yml"]
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "canary-phase-1-waiting-period" {
    name = "Canary phase 1 waiting period"
    properties = {
        Octopus.Action.TargetRoles = "#{Template.Tag}"
    }

    action {
        action_type = "Octopus.Script"
        excluded_environments_variable = "#{Template.Environment.Production}"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "template-scripts/shared/wait.ps1"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "approve-canary-phase-1" {
    name = "Approve canary phase 1"

    action {
        action_type = "Octopus.Manual"
        environments_variable = "#{Template.Environment.Production}"
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "True"
            Octopus.Action.Manual.Instructions = "Approve canary phase 1"
            Octopus.Action.RunOnServer = "false"
        }
    }
}

step "deploy-canary-phase-2" {
    name = "Deploy canary phase 2"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action {
        action_type = "Octopus.KubernetesRunScript"
        properties = {
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "template-scripts/kubernetes-canary/canary-phase-2.ps1"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "canary-phase-2-waiting-period" {
    name = "Canary phase 2 waiting period"
    properties = {
        Octopus.Action.TargetRoles = "#{Template.Tag}"
    }

    action {
        action_type = "Octopus.Script"
        excluded_environments_variable = "#{Template.Environment.Production}"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "template-scripts/shared/wait.ps1"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "approve-canary-phase-2" {
    name = "Approve canary phase 2"

    action {
        action_type = "Octopus.Manual"
        environments_variable = "#{Template.Environment.Production}"
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "True"
            Octopus.Action.Manual.Instructions = "Approve canary phase 2"
            Octopus.Action.RunOnServer = "false"
        }
    }
}

step "deploy-canary-phase-3" {
    name = "Deploy canary phase 3"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action {
        action_type = "Octopus.KubernetesRunScript"
        properties = {
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "template-scripts/kubernetes-canary/canary-phase-3.ps1"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "canary-phase-3-waiting-period" {
    name = "Canary phase 3 waiting period"
    properties = {
        Octopus.Action.TargetRoles = "#{Template.Tag}"
    }

    action {
        action_type = "Octopus.Script"
        excluded_environments_variable = "#{Template.Environment.Production}"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "template-scripts/shared/wait.ps1"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "approve-canary-phase-3" {
    name = "Approve canary phase 3"

    action {
        action_type = "Octopus.Manual"
        environments_variable = "#{Template.Environment.Production}"
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "True"
            Octopus.Action.Manual.Instructions = "Approve canary phase 2"
            Octopus.Action.RunOnServer = "false"
        }
    }
}

step "update-main" {
    name = "Update main deployment"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.Kubernetes.ServerSideApply.Enabled = "True"
            Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "True"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "template-scripts/kubernetes-canary/deploy-main.yml"
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            file_path_filters = ["template-scripts/kubernetes-canary/deploy-main.yml"]
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }

        packages "app-container" {
            acquisition_location = "NotAcquired"
            feed = "octopus-server-built-in"
            package_id = ""
            properties = {
                Extract = "false"
                PackageParameterName = "Template.Container"
                Purpose = "DockerImageReference"
                SelectionMode = "deferred"
            }
        }
    }
}

step "remove-canary" {
    name = "Remove canary pods from service"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.Kubernetes.ServerSideApply.Enabled = "True"
            Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "True"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "template-scripts/kubernetes-canary/deploy-service.yml"
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            file_path_filters = ["template-scripts/kubernetes-canary/deploy-service.yml"]
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "delete-canary-deployment" {
    name = "Delete canary deployment"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
    }

    action {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.Kubernetes.ServerSideApply.Enabled = "True"
            Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "True"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "template-scripts/kubernetes-canary/delete-canary-deployment.yml"
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            file_path_filters = ["template-scripts/kubernetes-canary/delete-canary-deployment.yml"]
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }

        packages "app-container" {
            acquisition_location = "NotAcquired"
            feed = "docker-hub"
            package_id = ""
            properties = {
                Extract = "False"
                PackageParameterName = "Template.Container"
                Purpose = ""
                SelectionMode = "deferred"
            }
        }
    }
}

step "detect-cancelled-canary" {
    name = "Detect cancelled canary rollout"
    properties = {
        Octopus.Action.TargetRoles = "#{Template.Tag}"
    }

    action "detect-cancelled-canary-rollout" {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "template-scripts/kubernetes-canary/detect-cancelled-canary.ps1"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}

step "rollback-canary-deployment" {
    condition = "Variable"
    name = "Rollback canary deployment"
    properties = {
        Octopus.Action.TargetRoles = "octopub"
        Octopus.Step.ConditionVariableExpression = "#{Octopus.Action[Detect cancelled canary rollout].Output.Cancelled}"
    }

    action {
        action_type = "Octopus.KubernetesRunScript"
        properties = {
            Octopus.Action.KubernetesContainers.Namespace = "#{Template.Cluster.Namespace}"
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "template-scripts/kubernetes-canary/rollback-canary.ps1"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-2"
            git_credential_type = "Library"
            repository_uri = "https://github.com/ryanrousseau/wrg-octopus-app.git"
        }
    }
}