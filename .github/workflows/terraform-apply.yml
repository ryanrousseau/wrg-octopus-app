name: Shared Workflow - Terraform Apply

on:
    workflow_call:
      inputs:
        terraform-folder:
          required: true
          type: string
        state-key-secret-name:
          required: true
          type: string
        octopus-apikey-secret-name:
            required: true
            type: string

jobs:
    apply-terraform-azure-backend:
        if: vars.BACKEND == 'azurerm'
        name: Apply Terraform with Azure backend
        runs-on: ubuntu-latest
        permissions:
          id-token: write
          contents: read
        steps:
          - uses: actions/checkout@v4
          - name: 'Az CLI login'
            uses: azure/login@v1
            with:
              client-id: ${{ secrets.ARM_CLIENT_ID }}
              tenant-id: ${{ secrets.ARM_TENANT_ID }}
              subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          - uses: hashicorp/setup-terraform@v3
          - name: Override the backend used by Terraform
            run: |-
              cat <<EOT >> ./terraform/${{ inputs.terraform-folder }}/backend_override.tf
              terraform {
                backend "azurerm" {}
              }
              EOT
          - name: Terraform Init
            id: terraform-init
            working-directory: terraform/${{ inputs.terraform-folder }}
            env:
              ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
              ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
              ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
              ARM_USE_OIDC: true
              RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
              STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
              CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
              TFSTATE_KEY: ${{ secrets[inputs.state-key-secret-name] }}
            run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP" -backend-config="key=$TFSTATE_KEY"
          - name: Terraform Apply
            id: terraform-apply
            working-directory: terraform/${{ inputs.terraform-folder }}
            env:
              ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
              ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
              ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
              ARM_USE_OIDC: true
              OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
              OCTOPUS_APIKEY: ${{ secrets[inputs.octopus-apikey-secret-name] }}
              TF_VAR_account_username: ${{ secrets.ACCOUNT_USERNAME }}
              TF_VAR_account_password: ${{ secrets.ACCOUNT_PASSWORD }}
              TF_VAR_azure_account_application_id: ${{ secrets.ARM_CLIENT_ID }}
              TF_VAR_azure_account_password: ${{ secrets.ARM_CLIENT_SECRET }}
              TF_VAR_azure_account_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
              TF_VAR_azure_account_tenant_id: ${{ secrets.ARM_TENANT_ID }}
            run: terraform apply -auto-approve
    apply-terraform-s3-backend:
        if: vars.BACKEND == 's3'
        name: Apply Terraform with S3 backend
        runs-on: ubuntu-latest
        permissions:
          id-token: write
          contents: read
        steps:
          - uses: actions/checkout@v4
          - name: configure aws credentials
            uses: aws-actions/configure-aws-credentials@v3
            with:
              role-to-assume: arn:aws:iam::623990049154:role/OctopusConfigJumpstart
              role-session-name: githubworkflow
              aws-region: us-east-2
          - uses: hashicorp/setup-terraform@v3
          - name: Override the backend used by Terraform
            run: |-
              cat <<EOT >> ./terraform/${{ inputs.terraform-folder }}/backend_override.tf
              terraform {
                backend "s3" {}
              }
              EOT
          - name: Terraform Init
            id: terraform-init
            working-directory: terraform/${{ inputs.terraform-folder }}
            env:
              S3_BUCKET: ${{ secrets.S3_BUCKET }}
              S3_REGION: ${{ secrets.S3_REGION }}
              TFSTATE_KEY: ${{ secrets[inputs.state-key-secret-name] }}
            run: terraform init -backend-config="bucket=$S3_BUCKET" -backend-config="region=$S3_REGION" -backend-config="key=$TFSTATE_KEY"
          - name: Terraform Apply
            id: terraform-apply
            working-directory: terraform/${{ inputs.terraform-folder }}
            env:
              OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
              OCTOPUS_APIKEY: ${{ secrets[inputs.octopus-apikey-secret-name] }}
              TF_VAR_account_username: ${{ secrets.ACCOUNT_USERNAME }}
              TF_VAR_account_password: ${{ secrets.ACCOUNT_PASSWORD }}
              TF_VAR_azure_account_application_id: ${{ secrets.ARM_CLIENT_ID }}
              TF_VAR_azure_account_password: ${{ secrets.ARM_CLIENT_SECRET }}
              TF_VAR_azure_account_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
              TF_VAR_azure_account_tenant_id: ${{ secrets.ARM_TENANT_ID }}
            run: terraform apply -auto-approve